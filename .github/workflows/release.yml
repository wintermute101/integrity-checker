name: Release

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

  build-latest-linux:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - uses: actions/checkout@v4
    - name: Build in release mode
      run: cargo build --release
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - run: |
        gzip -kf ./target/release/integrity-checker
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
        UPLOAD_URL: ${{needs.create-release.outputs.upload_url}}
      with:
        upload_url: $UPLOAD_URL 
        asset_path: ./target/release/integrity-checker.gz
        asset_name: integrity-checker.linux-amd64.tar.gz
        asset_content_type: application/gzip

  build-latest-windows:
    runs-on: windows-latest
    needs: create-release
    steps:
    - uses: actions/checkout@v4
    - name: Build in release mode
      run: cargo build --release
    - run: |
        zip target/release/integrity-checker
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
        UPLOAD_URL: ${{needs.create-release.outputs.upload_url}}
      with:
        upload_url: $UPLOAD_URL 
        asset_path: ./target/release/integrity-checker.zip
        asset_name: integrity-checker.windows-amd64.tar.gz
        asset_content_type: application/gzip